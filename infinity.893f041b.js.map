{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,S,0BAIEC,EAAS,IAAAC,QACTC,EAAQ,IAAAD,Q,2CCCV,MAAME,EAAeC,SAASC,eAAe,cACvCC,EAAYF,SAASG,cAAc,YAEnCC,EAAkB,IDNjB,MASLC,oBACE,OAAOC,EAAAC,GAAMC,IAAI,IAAC,EAAAd,EAAAe,SAAEC,KAAMd,KAAY,CACpCe,OAAQ,CACNC,KAAG,EAAAlB,EAAAe,SAAEC,KAAMZ,GACXe,EAAGH,KAAKI,MACRC,WAAY,QACZC,YAAa,aACbC,YAAY,EACZC,KAAMR,KAAKQ,KACXC,SAAU,K,CAdhBC,eAHA,EAAAC,EAAAZ,SAAAC,KAAAd,EAAS,C,kBAAG,8BACZ,EAAAyB,EAAAZ,SAAAC,KAAAZ,EAAQ,C,kBAAG,uCAGTY,KAAKQ,KAAO,EACZR,KAAKI,MAAQ,I,GCEXQ,EAAiB,IAAIhB,EAAAiB,GAAJ,CAAmB,mBAAoB,CAC5DC,cAAe,MAGjBzB,EAAa0B,iBAAiB,UAsC9BC,eAAkCC,GAChCA,EAAEC,iBAEFxB,EAAgBU,MAAQa,EAAEE,cAAcC,SAASC,OAAOC,MACxD5B,EAAgBc,KAAO,EAEvB,IACE,MAAMe,QAAiB7B,EAAgBC,oBAGvC,GAFA6B,QAAQC,IAAIF,EAASG,MAEW,IAA5BH,EAASG,KAAKC,UAMhB,OALAnC,EAAUoC,UAAY,GACtBX,EAAEY,OAAOC,aACTC,EAAAC,OAAOC,QACL,4EAKJ,GAAIvC,EAAgBc,OAASe,EAASG,KAAKC,UAGzC,OAFAnC,EAAUoC,WAAY,EAAAM,EAAAnC,SAAgBwB,EAASG,KAAKS,WACpDJ,EAAAC,OAAOI,QAAQ,oBAAoBb,EAASG,KAAKC,qBAInDI,EAAAC,OAAOI,QAAQ,oBAAoBb,EAASG,KAAKC,qBACjDnC,EAAUoC,WAAY,EAAAM,EAAAnC,SAAgBwB,EAASG,KAAKS,MAEpDvB,EAAeyB,UAEfC,EAASC,QAAQjD,SAASG,cAAc,wB,CACxC,MAAO+C,GACPhB,QAAQC,IAAIe,E,KApEhB,MAAMF,EAAW,IAAIG,sBACnBC,IACMA,EAAQ,GAAGC,gBAWnB3B,iBACEtB,EAAgBc,MAAQ,EACxBgB,QAAQC,IAAI,UAEZ,IACE,MAAMF,QAAiB7B,EAAgBC,oBAEnC4B,EAASG,KAAKS,KAAKS,OAAS,KAC9Bb,EAAAC,OAAOa,KAAK,8DACZP,EAASQ,UAAUxD,SAASG,cAAc,0BAG5CD,EAAUuD,mBACR,aACA,EAAAb,EAAAnC,SAAgBwB,EAASG,KAAKS,OAGhCvB,EAAeyB,S,CACf,MAAOG,GACPhB,QAAQC,IAAIe,E,EA7BVQ,EAAoB,GAGxB,CACEC,KAAM,KACNC,WAAY,OACZC,UAAW","sources":["src/js/infinity-card.js","src/infinity.js"],"sourcesContent":["'use strict';\nimport axios from 'axios';\n\nexport class PixabayPhotoAPI {\n  #BASE_URL = 'https://pixabay.com/api/';\n  #API_KEY = '28742881-7ed4fdaa96807499761d63f05';\n\n  constructor() {\n    this.page = 1;\n    this.query = null;\n  }\n\n  fetchPhotoByQuery() {\n    return axios.get(`${this.#BASE_URL}`, {\n      params: {\n        key: this.#API_KEY,\n        q: this.query,\n        image_type: 'photo',\n        orientation: 'horizontal',\n        safesearch: true,\n        page: this.page,\n        per_page: 21,\n      },\n    });\n  }\n}\n","import { PixabayPhotoAPI } from './js/infinity-card';\nimport SimpleLightbox from 'simplelightbox';\nimport 'simplelightbox/dist/simple-lightbox.min.css';\nimport photoCardMarkup from './templates/photo-card.hbs';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst searchFormEl = document.getElementById('search-bar');\nconst galleryEl = document.querySelector('.gallery');\n\nconst pixabayPhotoAPI = new PixabayPhotoAPI();\n\nconst simplelightbox = new SimpleLightbox('.gallery__item a', {\n  captionsDelay: 250,\n});\n\nsearchFormEl.addEventListener('submit', onSerachFormSubmit);\n\nconst observer = new IntersectionObserver(\n  entries => {\n    if (entries[0].isIntersecting) {\n      giveInfinityScroll();\n    }\n  },\n  {\n    root: null,\n    rootMargin: '50px',\n    threshold: 0.01,\n  }\n);\n\nasync function giveInfinityScroll() {\n  pixabayPhotoAPI.page += 1;\n  console.log('object');\n\n  try {\n    const response = await pixabayPhotoAPI.fetchPhotoByQuery();\n\n    if (response.data.hits.length < 20) {\n      Notify.info(\"We're sorry, but you've reached the end of search results.\");\n      observer.unobserve(document.querySelector('.for-infinity-scroll'));\n    }\n\n    galleryEl.insertAdjacentHTML(\n      'beforeend',\n      photoCardMarkup(response.data.hits)\n    );\n\n    simplelightbox.refresh();\n  } catch (err) {\n    console.log(err);\n  }\n}\n\nasync function onSerachFormSubmit(e) {\n  e.preventDefault();\n\n  pixabayPhotoAPI.query = e.currentTarget.elements.search.value;\n  pixabayPhotoAPI.page = 1;\n\n  try {\n    const response = await pixabayPhotoAPI.fetchPhotoByQuery();\n    console.log(response.data);\n\n    if (response.data.totalHits === 0) {\n      galleryEl.innerHTML = '';\n      e.target.reset();\n      Notify.failure(\n        'Sorry, there are no images matching your search query. Please try again.'\n      );\n      return;\n    }\n\n    if (pixabayPhotoAPI.page === response.data.totalHits) {\n      galleryEl.innerHTML = photoCardMarkup(response.data.hits);\n      Notify.success(`Hooray! We found ${response.data.totalHits} images.`);\n      return;\n    }\n\n    Notify.success(`Hooray! We found ${response.data.totalHits} images.`);\n    galleryEl.innerHTML = photoCardMarkup(response.data.hits);\n\n    simplelightbox.refresh();\n\n    observer.observe(document.querySelector('.for-infinity-scroll'));\n  } catch (err) {\n    console.log(err);\n  }\n}\n"],"names":["$43bai","parcelRequire","$2a57f8464e5b0e09$var$_BASE_URL","WeakMap","$2a57f8464e5b0e09$var$_API_KEY","$a797965fd7f89a35$var$searchFormEl","document","getElementById","$a797965fd7f89a35$var$galleryEl","querySelector","$a797965fd7f89a35$var$pixabayPhotoAPI","fetchPhotoByQuery","$parcel$interopDefault","$2shzp","get","default","this","params","key","q","query","image_type","orientation","safesearch","page","per_page","constructor","$h2iSt","$a797965fd7f89a35$var$simplelightbox","$fZKcF","captionsDelay","addEventListener","async","e","preventDefault","currentTarget","elements","search","value","response","console","log","data","totalHits","innerHTML","target","reset","$iQIUW","Notify","failure","$cgQaQ","hits","success","refresh","$a797965fd7f89a35$var$observer","observe","err","IntersectionObserver","entries","isIntersecting","length","info","unobserve","insertAdjacentHTML","$a797965fd7f89a35$var$giveInfinityScroll","root","rootMargin","threshold"],"version":3,"file":"infinity.893f041b.js.map"}