{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,S,uCAMA,MAAMC,EAAeC,SAASC,eAAe,cACvCC,EAAYF,SAASG,cAAc,YAEnCC,EAAkB,IAAI,EAAAP,EAAAQ,iBAEtBC,EAAiB,IAAIC,EAAAC,GAAJ,CAAmB,mBAAoB,CAC5DC,cAAe,MAGjBV,EAAaW,iBAAiB,UAsC9BC,eAAkCC,GAChCA,EAAEC,iBAEFT,EAAgBU,MAAQF,EAAEG,cAAcC,SAASC,OAAOC,MACxDd,EAAgBe,KAAO,EAEvB,IACE,MAAMC,QAAiBhB,EAAgBiB,oBAGvC,GAFAC,QAAQC,IAAIH,EAASI,MAEW,IAA5BJ,EAASI,KAAKC,UAMhB,OALAvB,EAAUwB,UAAY,GACtBd,EAAEe,OAAOC,aACTC,EAAAC,OAAOC,QACL,4EAKJ,GAAI3B,EAAgBe,OAASC,EAASI,KAAKC,UAGzC,OAFAvB,EAAUwB,WAAY,EAAAM,EAAAC,SAAgBb,EAASI,KAAKU,WACpDL,EAAAC,OAAOK,QAAQ,oBAAoBf,EAASI,KAAKC,qBAInDI,EAAAC,OAAOK,QAAQ,oBAAoBf,EAASI,KAAKC,qBACjDvB,EAAUwB,WAAY,EAAAM,EAAAC,SAAgBb,EAASI,KAAKU,MAEpD5B,EAAe8B,UAEfC,EAASC,QAAQtC,SAASG,cAAc,wB,CACxC,MAAOoC,GACPjB,QAAQC,IAAIgB,E,KApEhB,MAAMF,EAAW,IAAIG,sBACnBC,IACMA,EAAQ,GAAGC,gBAWnB/B,iBACEP,EAAgBe,MAAQ,EACxBG,QAAQC,IAAI,UAEZ,IACE,MAAMH,QAAiBhB,EAAgBiB,oBAEnCD,EAASI,KAAKU,KAAKS,OAAS,KAC9Bd,EAAAC,OAAOc,KAAK,8DACZP,EAASQ,UAAU7C,SAASG,cAAc,0BAG5CD,EAAU4C,mBACR,aACA,EAAAd,EAAAC,SAAgBb,EAASI,KAAKU,OAGhC5B,EAAe8B,S,CACf,MAAOG,GACPjB,QAAQC,IAAIgB,E,EA7BVQ,EAAoB,GAGxB,CACEC,KAAM,KACNC,WAAY,OACZC,UAAW","sources":["src/infinity.js"],"sourcesContent":["import { PixabayPhotoAPI } from './js/infinity-card';\nimport SimpleLightbox from 'simplelightbox';\nimport 'simplelightbox/dist/simple-lightbox.min.css';\nimport photoCardMarkup from './templates/photo-card.hbs';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst searchFormEl = document.getElementById('search-bar');\nconst galleryEl = document.querySelector('.gallery');\n\nconst pixabayPhotoAPI = new PixabayPhotoAPI();\n\nconst simplelightbox = new SimpleLightbox('.gallery__item a', {\n  captionsDelay: 250,\n});\n\nsearchFormEl.addEventListener('submit', onSerachFormSubmit);\n\nconst observer = new IntersectionObserver(\n  entries => {\n    if (entries[0].isIntersecting) {\n      giveInfinityScroll();\n    }\n  },\n  {\n    root: null,\n    rootMargin: '50px',\n    threshold: 0.01,\n  }\n);\n\nasync function giveInfinityScroll() {\n  pixabayPhotoAPI.page += 1;\n  console.log('object');\n\n  try {\n    const response = await pixabayPhotoAPI.fetchPhotoByQuery();\n\n    if (response.data.hits.length < 20) {\n      Notify.info(\"We're sorry, but you've reached the end of search results.\");\n      observer.unobserve(document.querySelector('.for-infinity-scroll'));\n    }\n\n    galleryEl.insertAdjacentHTML(\n      'beforeend',\n      photoCardMarkup(response.data.hits)\n    );\n\n    simplelightbox.refresh();\n  } catch (err) {\n    console.log(err);\n  }\n}\n\nasync function onSerachFormSubmit(e) {\n  e.preventDefault();\n\n  pixabayPhotoAPI.query = e.currentTarget.elements.search.value;\n  pixabayPhotoAPI.page = 1;\n\n  try {\n    const response = await pixabayPhotoAPI.fetchPhotoByQuery();\n    console.log(response.data);\n\n    if (response.data.totalHits === 0) {\n      galleryEl.innerHTML = '';\n      e.target.reset();\n      Notify.failure(\n        'Sorry, there are no images matching your search query. Please try again.'\n      );\n      return;\n    }\n\n    if (pixabayPhotoAPI.page === response.data.totalHits) {\n      galleryEl.innerHTML = photoCardMarkup(response.data.hits);\n      Notify.success(`Hooray! We found ${response.data.totalHits} images.`);\n      return;\n    }\n\n    Notify.success(`Hooray! We found ${response.data.totalHits} images.`);\n    galleryEl.innerHTML = photoCardMarkup(response.data.hits);\n\n    simplelightbox.refresh();\n\n    observer.observe(document.querySelector('.for-infinity-scroll'));\n  } catch (err) {\n    console.log(err);\n  }\n}\n"],"names":["$3Dor9","parcelRequire","$a797965fd7f89a35$var$searchFormEl","document","getElementById","$a797965fd7f89a35$var$galleryEl","querySelector","$a797965fd7f89a35$var$pixabayPhotoAPI","PixabayPhotoAPI","$a797965fd7f89a35$var$simplelightbox","$parcel$interopDefault","$fZKcF","captionsDelay","addEventListener","async","e","preventDefault","query","currentTarget","elements","search","value","page","response","fetchPhotoByQuery","console","log","data","totalHits","innerHTML","target","reset","$iQIUW","Notify","failure","$cgQaQ","default","hits","success","refresh","$a797965fd7f89a35$var$observer","observe","err","IntersectionObserver","entries","isIntersecting","length","info","unobserve","insertAdjacentHTML","$a797965fd7f89a35$var$giveInfinityScroll","root","rootMargin","threshold"],"version":3,"file":"infinity.9a6d1e90.js.map"}